allprojects {
	apply from: "$rootDir/gradle/tga.gradle"
	apply from: "$rootDir/gradle/report.gradle"

	ext {
		dataDir = "C:/Teamscale"

		teamscale.url = "http://localhost:8080"
		teamscale.project = "my-project"
		teamscale.username = "__TODO__"
		teamscale.accesskey = "__TODO__"
		
		// Do not upload to Teamscale (debugging)
		// teamscale.dryRun = true
		
		tga.pdb.store.dir = "$dataDir/tga/pdb"
		
		// E.g. remove non-C# PDBs
		tga.pdb.store.filter = { file -> isDotNetPdb(file) }

		// The PDB file that is used to calculate the timestamp the PDB correlate to the code (approximation) 
		tga.pdb.upload.timestampFile = "MyAssembly.pdb"
		
		// The directory where build results are stored. This can also be an array of multiple directories.
		tga.pdb.inbox.dir = /\\file-server\builds\MyBuild/

		// E.g. extract version from build directory by stripping a prefix 	
		tga.pdb.inbox.version = { dir ->
			dir.name - "MyBuild_"
		}

		// E.g. filter PDB files smaller than 20MB 
		tga.pdb.inbox.filter = { file -> 
			file.size() < 20 * 1024 * 1024
		}
		
		// E.g. require that an ISO file has been created, otherwise build failed
		tga.pdb.inbox.require = { dir ->
			fileTree("$dir/ISO").include("**.iso").any() 
		}
		
		tga.trace.inbox.dir = "$dataDir/share/traces"
		tga.trace.store.dir = "$dataDir/tga/trace/store"
		tga.trace.upload.versionAssembly = "MyAssembly"
		tga.trace.archive.dir = "$dataDir/tga/trace/archive"

		report.inbox.dir = "$dataDir/share/coverage"
		report.store.dir = "$dataDir/tga/coverage/store"
		report.archive.dir = "$dataDir/tga/coverage/archive"
		report.upload.partition = { report -> "VS Coverage" }
	}
}
